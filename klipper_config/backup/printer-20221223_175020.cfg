[mcu]
##	MCU for X/Y/E steppers main MCU
##	[X in X] - B Motor
##	[Y in Y] - A Motor
##	[E in E0] - Extruder
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_lpc1769_1A200101C0846AAFCDA0555EC02000F5-if00
baud: 250000
##--------------------------------------------------------------------

[mcu z]
##	MCU for Z steppers
##	[Z in X] - Front Left
##	[Z1 in Y] - Rear Left
##	[Z2 in Z] - Rear Right
##	[Z3 in E0]- Front Right
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_lpc1769_16800008C0846AAFBDC0555EC02000F5-if00
baud: 250000
##--------------------------------------------------------------------

[include mainsail.cfg]

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points: 175,175,50

[input_shaper]
shaper_freq_x: 53.6
shaper_type_x: mzv
shaper_freq_y: 40.8
shaper_type_y: mzv

[printer]
kinematics: corexy
max_velocity: 500
###########################################
###	deactivate for input shaper			###
###########################################
max_accel: 8000				#Max recommendet 4000
###########################################
###	activate when input shaper running	###
###########################################
#max_accel: 10000
#max_accel_to_decel: 10000
###########################################
max_z_velocity: 15			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0
#buffer_time_high: 10		#Octoprint fix
#####################################################################
# 	Stepper, Extruder, Bed, Fan, Display
#####################################################################

[include x-stepper.cfg]
[include y-stepper.cfg]
[include z-stepper.cfg]
[include extruder.cfg]
[include bed.cfg]
[include fan-control.cfg]
[include display.cfg]
###	chamber thermistor	###
[include chamber.cfg]

#####################################################################
# 	Probe and Mesh Bed Leveling
#####################################################################

[include probe_mesh_leveling.cfg]

#####################################################################
# 	Idle timeout adjustment for preheating the chamber
#####################################################################

[idle_timeout]
timeout: 3600

#####################################################################
# 	Standard macros for the printer
#####################################################################

[gcode_macro G32]
gcode:
	STATUS_HOMING
	M106 S64 ;part-Cooling fan at 25%
	BED_MESH_CLEAR
	G28
	STATUS_MESHING
	QUAD_GANTRY_LEVEL
	STATUS_HOMING
	G28
	G1 X175 Y325 Z50 F8000 ;move to save location
	STATUS_READY

[gcode_macro PRINT_START]
# Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
	G32							; home all axes
	G1 Z20 F3000				   ; move nozzle away from bed

[gcode_macro PRINT_END]
# Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
	M400						   ; wait for buffer to clear
	G92 E0						 ; zero the extruder
	G1 E-10.0 F3600				; retract filament
	G91							; relative positioning
	G0 Z1.00 X20.0 Y20.0 F20000	; move nozzle to remove stringing
	TURN_OFF_HEATERS
	M107						 ; turn off fan
	G1 Z2 F3000					; move nozzle up 2mm
	G90							; absolute positioning
	G0  X125 Y250 F3600			; park nozzle at rear
	BED_MESH_CLEAR

[pause_resume]

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
	# Parameters
	{% set z = params.Z|default(10)|int %}														; z hop amount
	
	{% if printer['pause_resume'].is_paused|int == 0 %}	 
		SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}									; set z hop variable for reference in resume macro
		SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}		; set hotend temp variable for reference in resume macro
								
		SET_FILAMENT_SENSOR SENSOR=btt_sensor ENABLE=0											; disable filament sensor
		SAVE_GCODE_STATE NAME=PAUSE														  ; save current print position for resume				
		BASE_PAUSE																		   ; pause print
		{% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}	   ; check that zhop doesn't exceed z max
			G91																			  ; relative positioning
			G1 Z{z} F900																	 ; raise Z up by z hop amount
		{% else %}
			{ action_respond_info("Pause zhop exceeds maximum Z height.") }				  ; if z max is exceeded, show message and set zhop value for resume to 0
			SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
		{% endif %}
		G90																				  ; absolute positioning
		G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
		SAVE_GCODE_STATE NAME=PAUSEPARK													  ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
		M104 S0																			  ; turn off hotend
		SET_IDLE_TIMEOUT TIMEOUT=43200													   ; set timeout to 12 hours
	{% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
	# Parameters
	{% set e = params.E|default(2.5)|int %}												; hotend prime amount (in mm)
	{% if printer['pause_resume'].is_paused|int == 1 %}
		SET_FILAMENT_SENSOR SENSOR=btt_sensor ENABLE=1									; enable filament sensor
		#RESETRGB																		; reset LCD color
		SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}		; set timeout back to configured value
		{% if etemp > 0 %}
			M109 S{etemp|int}															; wait for hotend to heat back up
		{% endif %}
		RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100						; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
		G91																				; relative positioning
		M83																				; relative extruder positioning
		{% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
			G1 Z{zhop * -1} E{e} F900													; prime nozzle by E, lower Z back down
		{% else %}
			G1 Z{zhop * -1} F900														; lower Z back down without priming (just in case we are testing the macro with cold hotend)
		{% endif %}							 
		RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60								; restore position
		BASE_RESUME																		; resume print
	{% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
	CLEAR_PAUSE
#	SDCARD_RESET_FILE
	PRINT_END_POS
	BASE_CANCEL_PRINT

[gcode_macro M600]
gcode:
	{% set X = params.X|default(75)|float %}
	{% set Y = params.Y|default(75)|float %}
	{% set Z = params.Z|default(10)|float %}
	SAVE_GCODE_STATE NAME=M600_state
	PAUSE
	G91
	G1 E-.2 F2700
	G1 Z{Z}
	G90
	G1 X{X} Y{Y} F3000
	G91
	G1 E-5 F1000
	RESTORE_GCODE_STATE NAME=M600_state 

#####################################################################
# 	Macros for Mods, personal flavour
#####################################################################

###	Klicky probe	###
[include klicky-probe.cfg]

###	automatic z calibration	###
[include z_calibration.cfg]

###	Bigtreetech smart filament sensor	###
[include btt-filament-sensor.cfg]

###	stealthburner LED setup	###
[include sb-led.cfg]

###	blink macro for manual nozzle clean	###
[include sb-led-wait.cfg]

###	customized macros	###
[include macro.cfg]


## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 57.524
#*# pid_ki = 1.395
#*# pid_kd = 593.219
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 26.010
#*# pid_ki = 1.230
#*# pid_kd = 137.527
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.023601, 0.080872, 0.074893, 0.096606, 0.110452, 0.007867
#*# 	0.023916, 0.062936, 0.057586, 0.071432, 0.079928, -0.002517
#*# 	0.016678, 0.057901, 0.053181, 0.063250, 0.064509, -0.006294
#*# 	0.005035, 0.056957, 0.054754, 0.063880, 0.062621, 0.000000
#*# 	0.025804, 0.067341, 0.070488, 0.089683, 0.094089, 0.046258
#*# 	0.029580, 0.073635, 0.064824, 0.086851, 0.093774, 0.050348
#*# tension = 0.2
#*# min_x = 25.0
#*# algo = bicubic
#*# y_count = 6
#*# mesh_y_pps = 3
#*# min_y = 25.0
#*# x_count = 6
#*# max_y = 325.0
#*# mesh_x_pps = 3
#*# max_x = 325.0
#*#
#*# [bed_mesh standard]
#*# version = 1
#*# points =
#*# 	-0.025804, -0.027692, -0.037132, -0.015105, 0.003776, -0.024545
#*# 	0.000629, -0.005035, -0.014475, -0.003147, 0.015734, -0.007552
#*# 	0.011958, 0.005035, -0.015105, -0.001888, 0.019510, -0.002517
#*# 	0.019510, 0.015734, 0.001259, 0.008811, 0.023916, 0.000000
#*# 	0.036503, 0.024545, 0.011958, 0.038391, 0.064194, 0.057271
#*# 	0.033985, 0.027692, 0.008811, 0.027062, 0.043426, 0.039020
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 6
#*# mesh_y_pps = 3
#*# min_y = 40.0
#*# x_count = 6
#*# max_y = 310.0
#*# mesh_x_pps = 3
#*# max_x = 310.0
