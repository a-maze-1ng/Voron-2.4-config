# 255 must be evenly divisble by the change interval, leaving possible intervals of
#   1, 3, 5, 15, 17, 51, 85, 255
# since the color changes every second, that leads to something like
#   interval 1 = 13 minutes for a full spectrum cycle (255 * (R + G + B) = 765 seconds)
#   interval 5 = 3 minutes
#   interval 15 = 51 seconds
#   interval 17 = 45 seconds
#   interval 51 = 15 seconds
# interval 15 seems to strike a good balance of color shift without visible flicker


[gcode_macro SHOW_ME_A_RAINBOW]
description: cycle through color spectrum while printing
variable_interval: 15
variable_red: 255
variable_green: 0
variable_blue: 0
gcode:

  _set_logo_leds red={red/255} green={green/255} blue={blue/255} white=0 transmit=0
  _set_nozzle_leds red={red/255} green={green/255} blue={blue/255} white=0.8 transmit=1

  {% if blue == 0 and red > 0 %}
    {% set red = red - interval %}
    {% set green = green + interval %}
  {% elif red == 0 and green > 0 %}
    {% set green = green - interval %}
    {% set blue = blue + interval %}
  {% elif green == 0 and blue > 0  %}
    {% set red = red + interval %}
    {% set blue = blue - interval %}
  {% endif %}

  SET_GCODE_VARIABLE MACRO=SHOW_ME_A_RAINBOW VARIABLE=red VALUE={red}
  SET_GCODE_VARIABLE MACRO=SHOW_ME_A_RAINBOW VARIABLE=green VALUE={green}
  SET_GCODE_VARIABLE MACRO=SHOW_ME_A_RAINBOW VARIABLE=blue VALUE={blue}

  UPDATE_DELAYED_GCODE ID=RAINBOW DURATION=1

[delayed_gcode RAINBOW]
initial_duration: 0
gcode:

  {% if 'Printing' in printer.idle_timeout.state %}
    SHOW_ME_A_RAINBOW
  {% endif %}


#[gcode_macro STATUS_PRINTING]
#description: override core Stealthburner printing status with SHOW_ME_A_RAINBOW
#rename_existing: SB_STATUS_PRINTING
#gcode:
#  SHOW_ME_A_RAINBOW
